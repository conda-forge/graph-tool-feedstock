diff --git m4/ax_lib_cgal_core.m4 m4/ax_lib_cgal_core.m4
index f3f3192e..3986e67f 100644
--- m4/ax_lib_cgal_core.m4
+++ m4/ax_lib_cgal_core.m4
@@ -52,64 +52,14 @@ AC_LANG_PUSH([C++])
 AC_CHECK_LIB(gmp, __gmpz_init, ,
   [AC_MSG_ERROR([GNU MP not found (a CGAL dependency), see https://gmplib.org/])])
 
-for ac_cgal_iterate in $ac_cgal_dirs ; do
-        CPPFLAGS_SAVED="$CPPFLAGS"
-        CGAL_CPPFLAGS="-I$ac_cgal_iterate/include"
-        CPPFLAGS="$CPPFLAGS $CGAL_CPPFLAGS $BOOST_CPPFLAGS"
-        export CPPFLAGS
-
-        for include_only in yes no; do
-            if test $include_only = yes ; then
-                CGAL_LDFLAGS=""
-            else
-                CGAL_LDFLAGS="-L$ac_cgal_iterate/lib -lCGAL -lCGAL_Core -lgmp ${BOOST_THREAD_LIB}"
-            fi
-            LDFLAGS_SAVED="$LDFLAGS"
-            LDFLAGS="$LDFLAGS $BOOST_LDFLAGS $CGAL_LDFLAGS"
-            export LDFLAGS
-
-            AC_MSG_CHECKING([whether CGAL is available in $ac_cgal_iterate])
-            dnl This test program is taken from:
-            dnl http://www.cgal.org/Manual/latest/examples/Convex_hull_2/vector_convex_hull_2.cpp
-            AC_RUN_IFELSE(
-                    [AC_LANG_PROGRAM(
-                    [
-                    [@%:@include <vector>]
-                    [@%:@include <CGAL/Exact_predicates_inexact_constructions_kernel.h>]
-                    [@%:@include <CGAL/convex_hull_2.h>]
-                    [typedef CGAL::Exact_predicates_inexact_constructions_kernel K;]
-                    [typedef K::Point_2 Point_2;]
-                    [typedef std::vector<Point_2> Points;]
-                    ],
-                    [
-                    [Points points, result;
-                    points.push_back(Point_2(0,0));
-                    points.push_back(Point_2(10,0));
-                    points.push_back(Point_2(10,10));
-                    points.push_back(Point_2(6,5));
-                    points.push_back(Point_2(4,1));
-                    CGAL::convex_hull_2(points.begin(),points.end(),std::back_inserter(result));
-                    //std::cout << result.size() << " points on the convex hull" << std::endl;]
-                    ])]
-                    ,[ac_cgal=yes],[ac_cgal=no])
-
-           LDFLAGS="$LDFLAGS_SAVED"
-           export LDFLAGS
-           if test $ac_cgal = yes ; then
-              break
-           fi
-        done
-        
-        CPPFLAGS="$CPPFLAGS_SAVED"
-        export CPPFLAGS
-
-        if test $ac_cgal = yes ; then
-                AC_MSG_RESULT([yes])
-                break
-        else
-                AC_MSG_RESULT([no])
-        fi
-done
+if test $withval ; then
+    AC_MSG_NOTICE([Using CGAL from args: --with-cgal=$withval])
+    CGAL_CPPFLAGS="-I$withval/include"
+    CGAL_LDFLAGS="-L$withval/lib -lCGAL -lCGAL_Core -lgmp ${BOOST_THREAD_LIB}"
+
+    CPPFLAGS_SAVED="$CPPFLAGS"
+    CPPFLAGS="$CPPFLAGS $CGAL_CPPFLAGS $BOOST_CPPFLAGS"
+    export CPPFLAGS    
+    LDFLAGS_SAVED="$LDFLAGS"
+    LDFLAGS="$LDFLAGS $BOOST_LDFLAGS $CGAL_LDFLAGS"
+    export LDFLAGS
+
+    AC_MSG_CHECKING([whether CGAL is available in $ac_cgal_iterate])
+    dnl This test program is taken from:
+    dnl http://www.cgal.org/Manual/latest/examples/Convex_hull_2/vector_convex_hull_2.cpp
+    AC_RUN_IFELSE(
+            [AC_LANG_PROGRAM(
+            [
+            [@%:@include <vector>]
+            [@%:@include <CGAL/Exact_predicates_inexact_constructions_kernel.h>]
+            [@%:@include <CGAL/convex_hull_2.h>]
+            [typedef CGAL::Exact_predicates_inexact_constructions_kernel K;]
+            [typedef K::Point_2 Point_2;]
+            [typedef std::vector<Point_2> Points;]
+            ],
+            [
+            [Points points, result;
+            points.push_back(Point_2(0,0));
+            points.push_back(Point_2(10,0));
+            points.push_back(Point_2(10,10));
+            points.push_back(Point_2(6,5));
+            points.push_back(Point_2(4,1));
+            CGAL::convex_hull_2(points.begin(),points.end(),std::back_inserter(result));
+            //std::cout << result.size() << " points on the convex hull" << std::endl;]
+            ])]
+            ,[ac_cgal=yes],[ac_cgal=no])
+
+    LDFLAGS="$LDFLAGS_SAVED"
+    export LDFLAGS
+    CPPFLAGS="$CPPFLAGS_SAVED"
+    export CPPFLAGS
+else
+    AC_MSG_ERROR("Please provide CGAL location via --with-cgal=<PREFIX>", 1)
+fi
 
 AC_LANG_POP([C++])
 
